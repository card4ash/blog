<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<id>http://host.com/blog</id>
	<title>ashcoder.io</title>
	<link rel="self" href="http://host.com/blog" />
	<rights>2020</rights>
	<updated>2020-11-17T22:18:46Z</updated>
	<subtitle>Welcome!</subtitle>
	<entry>
		<id>http://host.com/blog/posts/linux</id>
		<title>Linux  Basics</title>
		<link href="http://host.com/blog/posts/linux" />
		<updated>2020-10-12T00:00:00Z</updated>
		<content>&lt;h1 id="linux-command-to-find-out-hardware-info"&gt;Linux command to find out hardware info&lt;/h1&gt;
&lt;p&gt;Here is a list of commands to check hardware on Linux. Note that not all commands are available on all distributions. It is better to launch then as root (or via sudo) to get all the information.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    lscpu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;List available cpus and their caracteristics
Not available on older distribution&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    lshal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Require HAL (Hardware Abstraction Layer) to be installed
List all hardware visible by HAL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    lshw
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Available on Ubuntu based distributions by default, and Debian in the main repo
Available in the Fedora repositories
Uses many inputs to detect all hardware: Kernel, HAL, DMI, etc.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    lspci
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Standard command
List all hardware connected to the PCI bus as detected by the kernel&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    lsusb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Standard command
List all hardware connected to the USB buses as detected by the kernel&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    dmidecode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Standard command
Get the source information from the DMI (a kind of BIOS interface)
List all hardware as reported by the DMI interface&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Here is a list of commands to check hardware on Linux. Note that not all commands are available on all distributions. It is better to launch then as root (or via sudo) to get all the information.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/oraclelinux</id>
		<title>Oracle linux 7 Basics</title>
		<link href="http://host.com/blog/posts/oraclelinux" />
		<updated>2020-10-11T00:00:00Z</updated>
		<content>&lt;p&gt;#Install docker on oracle linux&lt;/p&gt;
&lt;p&gt;Take a backup of existing public-yum-ol7.repo :&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    sudo mv /etc/yum.repos.d/public-yum-ol7.repo /etc/yum.repos.d/public-yum-ol7.repo_org1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download the latest public-yum-ol7.repo from Oracle YUM repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo wget http://yum.oracle.com/public-yum-ol7.repo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make the following changes in your public-yum-ol7.repo file:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /etc/yum.repos.d/
sudo nano public-yum-ol7.repo
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;[ol7_latest]
name=Oracle Linux $releasever Latest ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/latest/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

[ol7_UEKR4]
name=Latest Unbreakable Enterprise Kernel Release 4 for Oracle Linux $releasever ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/UEKR4/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

[ol7_optional_latest]
name=Oracle Linux $releasever Optional Latest ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/optional/latest/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1

[ol7_addons]
name=Oracle Linux $releasever Add ons ($basearch)
baseurl=https://yum.oracle.com/repo/OracleLinux/OL7/addons/$basearch/
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-oracle
gpgcheck=1
enabled=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reboot your machine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo systemctl reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install docker using Oracle yum repository:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    yum install docker-engine
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Enable docker service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    sudo systemctl enable docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Start docker service:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    systemctl start docker
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check the status:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    systemctl status docker.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;#links
&lt;a href="https://blogs.oracle.com/blogbypuneeth/a-simple-guide-to-docker-installation-on-oracle-linux-75"&gt;https://blogs.oracle.com/blogbypuneeth/a-simple-guide-to-docker-installation-on-oracle-linux-75&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;#Install docker on oracle linux&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/powershell</id>
		<title>Powershell fundamentals</title>
		<link href="http://host.com/blog/posts/powershell" />
		<updated>2020-10-06T00:00:00Z</updated>
		<content>&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Powershell Version Checking. Open Powershell and run the following to check the powershell version&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    $PSVersionTable.PSVersion
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;If Powershell version lower than 5 then install using the following link&lt;/p&gt;
&lt;p&gt;&lt;a href="https://aka.ms/wmf5download"&gt;https://aka.ms/wmf5download&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For Installtin docker on Windows Server follow the below link&lt;/p&gt;
&lt;p&gt;&lt;a href="https://card4ash.github.io/blog/posts/docker"&gt;https://card4ash.github.io/blog/posts/docker&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For Install-PackageProvider : No match was found for the specified search criteria for the provider 'NuGet'. The package
provider requires 'PackageManagement' and 'Provider' tags. Please check if the specified package has the tags.
At line:1 char:1 related error try the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Get the latest version from PowerShell Gallery&lt;/p&gt;
&lt;p&gt;Before updating PowerShellGet, you should always install the latest NuGet provider. From an elevated PowerShell session, run the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-PackageProvider -Name NuGet -Force
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For systems with PowerShell 5.0 (or newer) you can install the latest PowerShellGet&lt;/p&gt;
&lt;p&gt;To install PowerShellGet on Windows 10, Windows Server 2016, any system with WMF 5.0 or 5.1 installed, or any system with PowerShell 6, run the following commands from an elevated PowerShell session.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Module -Name PowerShellGet -Force
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use Update-Module to get newer versions.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Update-Module -Name PowerShellGet
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install module packagemanagement for powershell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Install-Module -Name PackageManagement
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Powershell Repository&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Get-PSRepository
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="links"&gt;links&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/powershell/scripting/gallery/installing-psget?view=powershell-7"&gt;https://docs.microsoft.com/en-us/powershell/scripting/gallery/installing-psget?view=powershell-7&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
		<summary>&lt;p&gt;Powershell Version Checking. Open Powershell and run the following to check the powershell version&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/chatbot</id>
		<title>Rasa Chatbot Installation for Windows</title>
		<link href="http://host.com/blog/posts/chatbot" />
		<updated>2020-09-24T00:00:00Z</updated>
		<content>&lt;h1 id="rasa-chatbot-installtion-guide-step-by-step-for-windows-server"&gt;Rasa Chatbot Installtion Guide Step by Step for Windows Server&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Download and install Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019&lt;/p&gt;
&lt;p&gt;&lt;a href="https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads"&gt;Download and instruction link&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Download and install anaconda for python distribution&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.anaconda.com/products/individual"&gt;https://www.anaconda.com/products/individual&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create virtual environment using conda command prompt&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ conda create -n bots python=3.7
 $ conda activate bots
 $ conda install python=3.6.5
 $ pip install tensorflow
$ pip install rasa==2.0.0rc1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;check tensorflow installtion&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python -c 'import tensorflow as tf; print(tf.__version__)' 
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create and directory for source and initiate rasa project creation&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;e:
mdkir rasaproj
cd rasaproj
rasa init
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
		<summary>&lt;p&gt;Download and install Microsoft Visual C++ Redistributable for Visual Studio 2015, 2017 and 2019&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/mqttgs</id>
		<title>Mqtt Publish Subscribe Example</title>
		<link href="http://host.com/blog/posts/mqttgs" />
		<updated>2020-09-09T00:00:00Z</updated>
		<content>&lt;h1 id="publishing-using-mosquitto_pub"&gt;Publishing Using mosquitto_pub&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_pub -h 127.0.0.1 -m &amp;quot;test message&amp;quot; -t wasa/data
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="useful-flag-options-and-examples"&gt;Useful Flag Options and Examples&lt;/h1&gt;
&lt;p&gt;-r  Sets retain flag
-n  Sends Null message useful for clearing retain message.
-p – Set Port number Default is 1883
-u – Provide a username
-P – Provide a password
-i – Provide client name
-I – Provide a client id prefix- Used when testing client restrictions using prefix security.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_pub -h 127.0.0.1 -m &amp;quot;test message&amp;quot; -t wasa/data -u ash -P secred -d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with client id&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_pub -h 127.0.0.1 -m &amp;quot;test message&amp;quot; -t wasa/data -u ash -P secred -d -i testclientid 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Publishing JSON Data
JSON Data has a special format described here. When is comes to publishing with the mosquitto_pub client you need to escape the quotes so that they are included.&lt;/p&gt;
&lt;p&gt;So don’t use {“status”:”off”} but instead use: {\”status\”:\”off\”}.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_pub -h 127.0.0.1 -m {\&amp;quot;status\&amp;quot;:\&amp;quot;off\&amp;quot;} -t wasa/data -u ash -P secred -d -i testclientid 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_pub -h localhost -t test -m &amp;quot;{\&amp;quot;value1\&amp;quot;:20,\&amp;quot;value2\&amp;quot;:40}&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="the-mosquitto_sub-client"&gt;The Mosquitto_sub Client&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;    mosquitto_sub -h localhost -t wasa/# -u ash -P secred
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="links"&gt;Links&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.steves-internet-guide.com/mosquitto_pub-sub-clients/"&gt;http://www.steves-internet-guide.com/mosquitto_pub-sub-clients/&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
		<summary>&lt;p&gt;-r  Sets retain flag
-n  Sends Null message useful for clearing retain message.
-p – Set Port number Default is 1883
-u – Provide a username
-P – Provide a password
-i – Provide client name
-I – Provide a client id prefix- Used when testing client restrictions using prefix security.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/docker</id>
		<title>Docker for Windows</title>
		<link href="http://host.com/blog/posts/docker" />
		<updated>2020-09-04T00:00:00Z</updated>
		<content>&lt;h1 id="docker-basic-command"&gt;Docker Basic Command&lt;/h1&gt;
&lt;p&gt;All the process for docker&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker ps
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker ps -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pulling an image from docker-hub if not available locally and install it&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker run hello-world
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker image ls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Docker run in port 80 and mapping it to host port 80
hostport:containerport&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker run -p 80:80 nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stop the software&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker stop parts_of_container_id_which_is_unique
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker stop ee3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker ps -a
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker start container_name/part_of_container_id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Uninstalling/Removing software/docker container&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker rm ee3
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker rm ee3 b9 etc_rasa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Removing images&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker rmi nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Docker command help&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker help search
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Search from command line&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker search docs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run docker documents locally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker run -p 4000:4000 docs/docker.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Run docker server with interactive command line with name&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker run -p 4000:4000 -it --name docs docs/docker.github.io
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running server in background in detached mode&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker run -p 81:80 --name iis -d microsoft/iis:nanoserver
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So see the details about runnig image&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    docker inspect iis
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Docker IP Address&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Get the process associated with dockeer in powershell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    get-process *docker*
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="installing-docker-engine-on-windows-server-2016"&gt;Installing Docker Engine on Windows Server 2016&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/virtualization/windowscontainers/quick-start/set-up-environment?tabs=Windows-Server"&gt;Set up Environment&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    Install-Module -Name DockerMsftProvider -Repository PSGallery -Force
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    Install-Package -Name docker -ProviderName DockerMsftProvider
    Restart-Computer -Force
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker run microsoft/dotnet:nanoserver
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    docker run -it microsoft/dotnet:nanoserver dotnet --version
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="running-command-line-apps-in-containers"&gt;Running Command Line Apps in Containers&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker save nanoserver/iis -o iis.tar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Using linux container to extract tar&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run -it alpine
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Mounting c:\Users to container /data folder and show all files and folder inside container /data folder&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -v c:/Users:/data alpine ls /data
    docker run --rm -v c:/Users/ashraful.alam/iistartest:/data alpine ls /data 
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -it -v c:/Users/ashraful.alam/iistartest:/data alpine sh
    bash:\# tar -tf /data/iis.tar
    # mkdir /data/extract
    # tar -xf /data/iis.tar -C /data/extract
    # cd /data/extract/ 
    # ls
    # cat manifest.json
    # jq
    # apk add --no-cache jq
    # cat manifest.json | jq
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -it -v c:/Users/ashraful.alam/iistartest:/data alpine tar -xf /data/extract/e7306db32ff89edf4f4b1da671bb3923cdd116eb90df9882a78f5dbe3e92f019/layer.tar -C /data/extract/e7306db32ff89edf4f4b1da671bb3923cdd116eb90df9882a78f5dbe3e92f019/layer
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -it -v c:/Users/ashraful.alam/iistartest:/data alpine sh 
    # ls
    # cd data
    # cd extract
    # cd 7a27115c84f3a27e5658c2af681b313ddec35152658fc89270380c0495d0434b
    # mkdir layer
    # tar -xf layer.tar -C layer  
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -it -v c:/Users/ashraful.alam/iistartest:/data ubuntu sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nmap port scanning&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm `
    weshigbee/nmap -v 192.168.0.0/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ffmpeg converting mp4 to gif&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm `
    --volume ${pwd}:/output `
    jrottenberg/ffmpeg -i http://www.weshigbee.com/wp-content/uploads/2014/12/Turkey-Short.mp4 /output/Turkey.gif
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="building-images-to-host-web-sites"&gt;Building Images to Host Web Sites&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --rm -it -p 8080:80 nginx
    docker run --rm -it -p 8080:80 -v C:\Users\ashraful.alam\solitaire\app:/usr/share/nginx/html nginx


    docker run -d -p 8080:80 --name ngi nginx
    docker cp .\app\. ngi:/usr/share/nginx/html 
    docker exec -it ngi bash
    cd /usr/share/nginx/html

    docker exec nginx ls /usr/share/nginx/html 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Create Image&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker commit ngi solitaire:nginx
    docker run -d -p 8090:80 solitaire:nginx
    docker exec 4f9e1 ls /usr/share/nginx/html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Image layer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker history nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Docker File&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    From nginx
    COPY app /usr/share/nginx/html
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;mv  .\Dockerfile.txt .\Dockerfile
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker build -f Dockerfile -t solitaire:nginx-df .
    or
    docker build -t solitaire:nginx-df .
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker images | sls nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Publishing to Docker HUb&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker tag solitaire:nginx-df ashcoder/solitaire:nginx
    docker push  ashcoder/solitaire:nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="running-database-in-container"&gt;Running Database in Container&lt;/h1&gt;
&lt;p&gt;MS SQL Server on linux Docker&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run -e &amp;quot;ACCEPT_EULA=Y&amp;quot; -e &amp;quot;SA_PASSWORD=sqladmin&amp;#64;123&amp;quot; -p 1450:1433 -d mcr.microsoft.com/mssql/server
     docker logs container_id_partial
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --name some-mysql -p 3305:3306 -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql
    docker exec -it some-mysql mysql --user=root --password=my-secret-pw 
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="clean-up"&gt;Clean Up&lt;/h1&gt;
&lt;p&gt;stop all container&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker stop $(docker ps -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;remove all stoped container&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker container prune
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;remove all container&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;docker rm -f $(docker ps -aq)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remove unused volumes&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker volume prune
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;remove all volume&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;docker volume rm $(docker volume ls -q)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;remove container with volume&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;docker rm -fv container_id
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="docker-compose"&gt;Docker Compose&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker run --name db `
		-d `
		-p 3306:3306 `
		-e MYSQL_ROOT_PASSWORD=my-secret-pw `
		-v db:/var/lib/mysql `
		mysql
		
docker inspect db #extract ip address

docker run --name web `
		-d `
		-p 8080:80 `
		-e MY_DB_PORT=3306 `
		-e MY_DB_HOST=? `
		-v /my/php/app:/usr/share/nginx/html `
		nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;docker-compose.yml file&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;version: '2'

services:
    teamcity:
        image: sjoerdmulder/teamcity
        ports:
            - 8111:8111
    teamcity-agent:
        image: sjoerdmulder/teamcity-agent
        environment:
            - TEAMCITY_SERVER=http://teamcity:8111
    postgres:
        image: postgres
        environment:
            - POSTGRES_DB=teamcity
            - POSTGRES_PASSWORD=teamcity
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    docker-compose up
    docker network ls 
    docker network inspect eb1_container_id
    docker network inspect bridge
    docker exec -it teamcity_postgres_1 bash
    docker-compose exec postgres bash 
    docker run --name alpine --rm --net teamcity_default -it alpine sh
    docker-compose exec teamcity bash
    docker-compose start teamcity-agent
    docker-compose ps
    docker-compose exec postgres psql -U postgres 
    docker-compose stop
    docker-compose rm
    docker-compose down
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;version: ‘2’
services:
    db:
        image: mysql
        ports:
        -3306:3306
        environment:
        -MYSQL_ROOT_PASSWORD=my-secret-pw
        volumes:
        -db:/var/lib/mysql
    web:
        image: nginx
        ports:
        -8080:80
        environment:
        -MY_DB_PORT=3306
        -MY_DB_HOST=db
        volumes:
        -/my/php/app:/usr/share/nginx/html

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://github.com/friism/MusicStore"&gt;github://friism/MusicStore&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;version: '3'
services:
  db:
    image: microsoft/mssql-server-windows-developer
    environment:
      sa_password: &amp;quot;Password1&amp;quot;
      ACCEPT_EULA: &amp;quot;Y&amp;quot;
    ports:
      - &amp;quot;1433:1433&amp;quot; # REMARK: This is currently required, needs investigation
    healthcheck:
      test: [ &amp;quot;CMD&amp;quot;, &amp;quot;sqlcmd&amp;quot;, &amp;quot;-U&amp;quot;, &amp;quot;sa&amp;quot;, &amp;quot;-P&amp;quot;, &amp;quot;Password1&amp;quot;, &amp;quot;-Q&amp;quot;, &amp;quot;select 1&amp;quot; ]
      interval: 1s
      retries: 30

  web:
    build:
      context: .
      dockerfile: Dockerfile.windows
    environment:
      - &amp;quot;Data:DefaultConnection:ConnectionString=Server=db,1433;Database=MusicStore;User Id=sa;Password=Password1;MultipleActiveResultSets=True&amp;quot;
    depends_on:
      - db
    ports:
      - &amp;quot;5000:5000&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
</content>
		<summary>&lt;p&gt;All the process for docker&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/mongoquery</id>
		<title>Mongo DB Basics</title>
		<link href="http://host.com/blog/posts/mongoquery" />
		<updated>2020-08-29T00:00:00Z</updated>
		<content>&lt;h2 id="connect-to-mongodb-from-cli"&gt;Connect to mongodb from cli&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;mongo&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;with port&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mongo --port 27017&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mongo localhost:27017&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can specify a connection string. For example, to connect to a MongoDB instance running on a remote host machine&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo &amp;quot;mongodb://mongodb0.example.com:28015&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can use the command-line option --host &lt;host&gt;:&lt;port&gt;. For example, to connect to a MongoDB instance running on a remote host machine:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo --host mongodb0.example.com:28015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo --host mongodb0.example.com --port 28015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;using auth&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo &amp;quot;mongodb://alice&amp;#64;mongodb0.examples.com:28015/?authSource=admin&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    mongo --username alice --password --authenticationDatabase admin --host mongodb0.examples.com --port 28015
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="customize-mongo-shell-prompt"&gt;Customize Mongo shell prompt&lt;/h2&gt;
&lt;p&gt;Edit .mongorc.js in user folder&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    host=db.serverStatus().host;

    prompt=function(){
        return db+&amp;quot;&amp;#64;&amp;quot;+host+&amp;quot; &amp;gt;&amp;quot;;
    }
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="import-sample-database"&gt;import sample database&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/dangeabunea/pluralsight-mongodb-queries/blob/master/how-to-import-sample-db.md"&gt;https://github.com/dangeabunea/pluralsight-mongodb-queries/blob/master/how-to-import-sample-db.md&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongoimport --file C:\flights.json --collection flights --db flightmgmt --drop
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="database-command"&gt;Database Command&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    db
    use &amp;lt;database&amp;gt;
    show dbs
    use myNewDatabase
    db.myCollection.insertOne( { x: 1 } );
    db.getCollection(&amp;quot;3 test&amp;quot;).find()
    db.getCollection(&amp;quot;3-test&amp;quot;).find()
    db.getCollection(&amp;quot;stats&amp;quot;).find()
    db.getCollection(&amp;quot;rasa&amp;quot;).find()
    show collections
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="populate-data"&gt;populate data&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.insertMany([
    { item: &amp;quot;journal&amp;quot;, qty: 25, status: &amp;quot;A&amp;quot;, size: { h: 14, w: 21, uom: &amp;quot;cm&amp;quot; }, tags: [ &amp;quot;blank&amp;quot;, &amp;quot;red&amp;quot; ] },
    { item: &amp;quot;notebook&amp;quot;, qty: 50, status: &amp;quot;A&amp;quot;, size: { h: 8.5, w: 11, uom: &amp;quot;in&amp;quot; }, tags: [ &amp;quot;red&amp;quot;, &amp;quot;blank&amp;quot; ] },
    { item: &amp;quot;paper&amp;quot;, qty: 10, status: &amp;quot;D&amp;quot;, size: { h: 8.5, w: 11, uom: &amp;quot;in&amp;quot; }, tags: [ &amp;quot;red&amp;quot;, &amp;quot;blank&amp;quot;, &amp;quot;plain&amp;quot; ] },
    { item: &amp;quot;planner&amp;quot;, qty: 0, status: &amp;quot;D&amp;quot;, size: { h: 22.85, w: 30, uom: &amp;quot;cm&amp;quot; }, tags: [ &amp;quot;blank&amp;quot;, &amp;quot;red&amp;quot; ] },
    { item: &amp;quot;postcard&amp;quot;, qty: 45, status: &amp;quot;A&amp;quot;, size: { h: 10, w: 15.25, uom: &amp;quot;cm&amp;quot; }, tags: [ &amp;quot;blue&amp;quot; ] }
    ]);

    // MongoDB adds an _id field with an ObjectId value if the field is not present in the document
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="select-all-documents"&gt;Select All Documents&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.find({})
    db.inventory.find({}).pretty()
    db.conversations.find({})
    db.conversations.find({}).pretty()
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="specify-equality-matches"&gt;Specify Equality Matches&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.find( { status: &amp;quot;D&amp;quot; } );
    db.inventory.find( { qty: 0 } );
    db.inventory.find( { qty: 0, status: &amp;quot;D&amp;quot; } );
    db.inventory.find( { &amp;quot;size.uom&amp;quot;: &amp;quot;in&amp;quot; } )
    db.inventory.find( { size: { h: 14, w: 21, uom: &amp;quot;cm&amp;quot; } } )
    db.inventory.find( { tags: &amp;quot;red&amp;quot; } )
    db.inventory.find( { tags: [ &amp;quot;red&amp;quot;, &amp;quot;blank&amp;quot; ] } )
    db.inventory.find( { status: { $in: [ &amp;quot;A&amp;quot;, &amp;quot;D&amp;quot; ] } } )
    db.inventory.find( { $or: [ { status: &amp;quot;A&amp;quot; }, { qty: { $lt: 30 } } ] } )
    db.inventory.find( {
     status: &amp;quot;A&amp;quot;,
     $or: [ { qty: { $lt: 30 } }, { item: /^p/ } ]} )
    


&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="project-fields-to-return-from-query"&gt;Project Fields to Return from Query&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.find( { status: &amp;quot;A&amp;quot; }, { item: 1, status: 1 } )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Suppress _id Field&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.find( { status: &amp;quot;A&amp;quot; }, { item: 1, status: 1, _id: 0 } )
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    db.inventory.find( { status: &amp;quot;A&amp;quot; }, { status: 0, instock: 0 } )
    db.flights.find({}, {duration: 1, &amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1}).pretty()
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Counts all the documents in the flights collection&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.count()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Prints all the documents in the flights collection&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Prints all the documents in the flights collecion in a redable JSON format&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find().pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Prints the duration, departure.city and destination.city to the console in a redable JSON format
The _id is also going to be added by default&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({}, {duration: 1, &amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Prints the duration, departure.city and destination.city to the console in a redable JSON format
The _id is going to be excluded&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({}, {duration: 1, &amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1, _id: 0}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="6"&gt;
&lt;li&gt;Prints the first 5 documents returned by the find method to the screen in a readable JSON format&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({}, {duration: 1, &amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1, _id: 0}).limit(5).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="7"&gt;
&lt;li&gt;Prints the flight documents in descending order by the duration field.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({}, {duration: 1, &amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1, _id: 0}).sort({&amp;quot;duration: -1&amp;quot;}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;h1 id="complex-query"&gt;Complex Query&lt;/h1&gt;
&lt;h2 id="module-4-queries"&gt;Module 4 Queries&lt;/h2&gt;
&lt;h3 id="query-sub-documents"&gt;Query Sub-Documents&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all flights where departure city is Paris&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({&amp;quot;departure.city&amp;quot; : &amp;quot;Paris&amp;quot;}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Find all flights where the destination runway length is less than 3000&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({&amp;quot;destination.runwayLength&amp;quot;: {$lt: 3000}})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="query-against-multiple-conditions"&gt;Query Against Multiple Conditions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all the flights where duration is less than 2 hours AND the type is internal&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({$and: [{duration: {$lt: 120}}, {type: &amp;quot;Internal&amp;quot;}]}, {duration: 1, type: 1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Select all the flights where the duration is between 2 and 3 hours (short query version because the same field is targeted)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({duration: {$lt: 180, $gt: 120}}, {duration: 1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select all the flights where the depart OR land in Germany&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({$or: [{&amp;quot;departure.country&amp;quot;: &amp;quot;Germany&amp;quot;}, {&amp;quot;destination.country&amp;quot;: &amp;quot;Germany&amp;quot;}]}, {&amp;quot;departure.city&amp;quot;: 1, &amp;quot;destination.city&amp;quot;: 1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Find all the aircraft where the capacity is greater than 200 OR the range is less than 6000&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({ $or: [ {capacity : {$gt: 200}} , {range : {$gt : 6000}} ] })&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Combine AND and OR: Select all the flights where the 'minRunwayLength' is less than 3000 AND either the capacity is greater than 200 OR the range is greater than 6500&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;db.aircraft.find({ $and: [
		{ minRunwayLength: {$lte: 3000} },
		{ $or: [ {capacity: {$gt: 200}} , {range: {$gt: 6500}} ] }, 
	]
}).pretty()

&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="edge-cases-find-by-null-type-or-by-field-existence"&gt;Edge Cases: Find by null, type or by field existence&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Find all the flights where the 'aircraftCode' field exists&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({aircraftCode: {$exists: true}}, {aircraftCode: 1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Find all the flights where the 'aircraftCode' field exists and it's type is 'string'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({aircraftCode: {$exists: true, $type: &amp;quot;string&amp;quot;}}, {aircraftCode: 1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Find all the flights where the 'aircraftCode' fiels is null&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find( {aircraftCode : null} ).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="free-text-search"&gt;Free Text Search&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Create text index on departure and destination fields&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.createIndex({&amp;quot;departure.city&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;destination.city&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;departure.country&amp;quot;: &amp;quot;text&amp;quot;, &amp;quot;destination.country&amp;quot;: &amp;quot;text&amp;quot;})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Find all the documents by free text 'Paris Portugal' and also print the text score (relevance)
&lt;code&gt;db.flights.find({$text: {$search: &amp;quot;Paris Portugal&amp;quot;}}, {_id:1, score: {$meta: &amp;quot;textScore&amp;quot;}}).pretty()&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="working-with-array"&gt;Working With Array&lt;/h1&gt;
&lt;h3 id="array-query-operators"&gt;Array Query Operators&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Find all the crew members where all the skills are either 'tehchnical' or 'sales'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({ skills: {$all: [&amp;quot;technical&amp;quot;, &amp;quot;sales&amp;quot;]}})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Find all the crew members that have exactly 2 skills&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({ skills: { $size: 2} })&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Find all the crew members where the skill object matches multiple conditions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({skills: {$elemMatch: {name: &amp;quot;flying&amp;quot;, lvl: {$gt: 7}}}})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="array-projection-operators"&gt;Array Projection Operators&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Show first 2 elements from an array when performing queries&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({}, {skills: {$slice: 2})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Show the first element that matches the array querying&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({skills: &amp;quot;management&amp;quot;}, {&amp;quot;skills.$&amp;quot;:1})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Only display the array elements that match a list of given conditions&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({}, {skills: { $elemMatch: {lvl: {$gt: 7}} } })&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="demo-queryies"&gt;Demo Queryies&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Flights containing at least a German crew member&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({&amp;quot;crew.nationality&amp;quot;: &amp;quot;Germany&amp;quot;},{crew: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({&amp;quot;crew.nationality&amp;quot;: &amp;quot;Germany&amp;quot;},{&amp;quot;crew.$&amp;quot;: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Flights that do not have a crew (size is 0)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({crew: []}, {crew:1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({crew: {$size: 0}},{crew: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Flights that do not have a captain&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({&amp;quot;crew.position&amp;quot;: {$ne: &amp;quot;Captain&amp;quot;}}, {&amp;quot;crew.position&amp;quot;: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Flights where the captain has little hours of sleep (7)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({crew: {$elemMatch: {position: &amp;quot;Captain&amp;quot;, hoursSlept: {$gt: 6}}}}, {crew: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({crew: {$elemMatch: {position: &amp;quot;Captain&amp;quot;, hoursSlept: {$gt: 6}}}}, {&amp;quot;crew.$&amp;quot;: 1}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Display only the captain in the crew array when querying the flight documents&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.flights.find({}, {crew: {$elemMatch: {position: &amp;quot;Captain&amp;quot;}}}).pretty()&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="pretty-print-mongodb-shell-output-to-a-file"&gt;Pretty print MongoDB shell output to a file&lt;/h2&gt;
&lt;p&gt;use Javascript to translate the result of a find() into a printable JSON&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo dbname command.js &amp;gt; output.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where command.js contains this (or its equivalent):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    printjson( db.collection.find().toArray() )
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="stop-mongodb-server-on-windows"&gt;stop mongodb server on Windows&lt;/h2&gt;
&lt;p&gt;Save the following snippet in stop_mongod.js file&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    db = connect(&amp;quot;localhost:27017/admin&amp;quot;);
    db.shutdownServer();
    quit();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Adjust the connection string if necessary. Then from the command line or within your batch script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    mongo stop_mongod.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or
Open Command Prompt/Powershell as Administrator.
Execute &lt;code&gt;net stop MongoDB&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="query-filter-documents"&gt;Query Filter Documents&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;{ field : { $operator : value } }&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    $eq
    $ne
    $in
    $nin
    $lt 
    $lte
    $gt 
    $gte
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="equality-non-equality"&gt;Equality / Non Equality&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all the aircraft where the model field is equal to 'Boeing 737-900'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({model: &amp;quot;Boeing 737-900&amp;quot;})&lt;/code&gt;
&lt;code&gt;db.aircraft.find({model: { $eq : &amp;quot;Boeing 737-900“ }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Select all the aircraft where the range field is 5600&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({range: 5600})&lt;/code&gt;
&lt;code&gt;db.aircraft.find({range: {$eq: 5600}})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select all the aircraft where the underMaintenance field is true&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({underMaintenance: true})&lt;/code&gt;	
&lt;code&gt;db.aircraft.find({underMaintenance: {$eq: true}})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Select a single document by _id&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.findOne({_id: ObjectId(&amp;quot;5e8aa971e1562c14d031a021&amp;quot;)})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Select all the aircraft where the model field is not 'Boeing 737-900'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({range: { $neq : 5600 }})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="greater-than"&gt;Greater Than&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all the aircraft where the capacity field is strictly greater than 200&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({capacity: { $gt : 200 }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Select all the aircraft where the nextMaintenance field is greater then (after) 2020-02-20&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({nextMaintenance: { $gt : ISODate(&amp;quot;2020-02-20&amp;quot;) }})&lt;/code&gt;	
&lt;code&gt;db.aircraft.find({nextMaintenance: { $gte : ISODate(&amp;quot;2020-02-20T10:15:00Z&amp;quot;) }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select all the aircraft where the capacity field is greater or equal than 200&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({capacity: { $gte : 200 }})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="less-than"&gt;Less Than&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all the aircraft where the capacity field is strictly less than 200&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({capacity: { $lt : 200 }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Select all the aircraft where the nextMaintenance field is less then (before) 2020-02-20&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({nextMaintenance: { $lt : ISODate(&amp;quot;2020-02-20&amp;quot;) }})&lt;/code&gt;	
&lt;code&gt;db.aircraft.find({nextMaintenance: { $lte : ISODate(&amp;quot;2020-02-20T10:15:00Z&amp;quot;) }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select all the aircraft where the capacity field is less than or equal to 200&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({capacity: { $lte : 200 }})&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="in-not-in"&gt;In / Not In&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Select all aircraft where the model field has one of the values : 'Airbus A350', 'Boeing 747'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({ model: { $in: [&amp;quot;Airbus A350“, “Boeing 747”] }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Select all the crew that have at least a skill in the array: 'engineering', 'management'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({skills: { $in: [&amp;quot;engineering&amp;quot;, &amp;quot;management&amp;quot;] } })&lt;/code&gt;&lt;/p&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Select all the aircraft where the model field matches a regular expression&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({ model: { $in: [/^A/] } })&lt;/code&gt;&lt;/p&gt;
&lt;ol start="4"&gt;
&lt;li&gt;Select all aircraft where the model field is different than : 'Airbus A350', 'Boeing 747'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({ model: { $nin: [&amp;quot;Airbus A350“, “Boeing 747”] }})&lt;/code&gt;&lt;/p&gt;
&lt;ol start="5"&gt;
&lt;li&gt;Select all the crew that have no skill element in the array: 'engineering', 'management'&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.crew.find({skills: { $nin: [&amp;quot;engineering&amp;quot;, &amp;quot;management&amp;quot;] } })&lt;/code&gt;&lt;/p&gt;
&lt;ol start="6"&gt;
&lt;li&gt;Select all the aircraft where the model field does not matche a regular expression&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;code&gt;db.aircraft.find({ model: { $nin: [/^A/] } })&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="near"&gt;Near&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Find all the aircraft within 10 km of lon=26.2, lat=44.4&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;db.aircraft.find({position: {$near : {
	$geometry: {type: &amp;quot;Point&amp;quot;, coordinates: [26.2, 44.4]}, 
	$maxDistance: 10000
	}}
}).pretty()
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="links"&gt;Links&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://docs.mongodb.com/manual/mongo/"&gt;https://docs.mongodb.com/manual/mongo/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/dangeabunea/pluralsight-mongodb-queries"&gt;https://github.com/dangeabunea/pluralsight-mongodb-queries&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
		<summary>&lt;p&gt;&lt;code&gt;mongo&lt;/code&gt;&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/emqttcluster</id>
		<title>Creating MQTT Cluster</title>
		<link href="http://host.com/blog/posts/emqttcluster" />
		<updated>2020-08-15T00:00:00Z</updated>
		<content>&lt;h1 id="emqtt-cluster-broker"&gt;Emqtt Cluster Broker&lt;/h1&gt;
&lt;h1 id="creating-mqtt-cluster-broker"&gt;Creating MQTT Cluster Broker&lt;/h1&gt;
&lt;hr /&gt;
&lt;p&gt;Emqtt Cluster Broker&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Install  broker&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;#. Cd into emqttd (all command run from C:\emqttd)
#. Edit emqttd\etc\emq.conf file (possible line 21) change node.name = emqttd&amp;#64;192.168.11.9
#. Repeat it for every node like node.name = emqttd&amp;#64;192.168.11.10 node.name =emqttd&amp;#64;192.168.11.11&lt;/p&gt;
&lt;p&gt;For every node&lt;/p&gt;
&lt;p&gt;#. Start the broker in console mode:&lt;code&gt;bin\emqttd console&lt;/code&gt;
#. Install emqttd serivce:&lt;code&gt;bin\emqttd install&lt;/code&gt;
#. Start emqttd serivce:&lt;code&gt;bin\emqttd start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Start the three broker nodes, and ‘cluster join ‘ on node&amp;#64;213.136.77.177 and node&amp;#64;213.136.80.212 respectively as follows&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   ./bin/emqttd_ctl cluster join emqttd&amp;#64;213.136.80.212
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;The Firewall&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Open 4369 port  used by epmd daemon, and a port segment for nodes’ communication.
here we open 20000-21000 for node communication&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  [{kernel, [
        ...
        {inet_dist_listen_min, 20000},
        {inet_dist_listen_max, 21000}
  ]},
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;Verneqm Cluster Broker (Alternative to emqtt)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Installation&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Since emqtt cluster does not support shared subscription accross cluster. We tried to
solve the problem using vernemq cluster. Vernemq cluster support shared subscription.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing VerneMQ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Download the binary package from &lt;a href="https://vernemq.com/downloads/"&gt;https://vernemq.com/downloads/&lt;/a&gt;
we choose Xenial 1.3.0.
Once downloaded the binary package, execute the following command to install VerneMQ:&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i vernemq_1.3.0-1_amd64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Verify installation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -s vernemq | grep Status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vernemq nodes config for creating cluster&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/vernemq/vernemq.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    allow_anonymous = on
    allow_register_during_netsplit = on
    allow_publish_during_netsplit = on
    allow_subscribe_during_netsplit = on
    allow_unsubscribe_during_netsplit = on
    allow_multiple_sessions = off
    retry_interval = 10
    max_client_id_size = 512
    max_inflight_messages = 1000
    max_online_messages = -1
    max_offline_messages = -1
    max_message_size = 0
    upgrade_outgoing_qos = off
    listener.max_connections = 10000
    listener.nr_of_acceptors = 10
    listener.tcp.default = 192.168.100.123:1883
    listener.vmq.clustering = 192.168.100.123:44053
    listener.http.default = 127.0.0.1:8888
    listener.mountpoint = off
    systree_enabled = on
    systree_interval = 20000
    graphite_enabled = off
    graphite_host = localhost
    graphite_port = 2003
    graphite_interval = 20000
    shared_subscription_policy = random
    plugins.vmq_passwd = on
    plugins.vmq_acl = on
    plugins.vmq_diversity = off
    plugins.vmq_webhooks = off
    plugins.vmq_bridge = off
    vmq_acl.acl_file = /etc/vernemq/vmq.acl
    vmq_acl.acl_reload_interval = 10
    vmq_passwd.password_file = /etc/vernemq/vmq.passwd
    vmq_passwd.password_reload_interval = 10
    vmq_diversity.script_dir = /usr/share/vernemq/lua
    vmq_diversity.auth_postgres.enabled = off
    vmq_diversity.auth_mysql.enabled = off
    vmq_diversity.auth_mongodb.enabled = off
    vmq_diversity.auth_redis.enabled = off
    log.console = file
    log.console.level = info
    log.console.file = /var/log/vernemq/console.log
    log.error.file = /var/log/vernemq/error.log
    log.syslog = off
    log.crash = on
    log.crash.file = /var/log/vernemq/crash.log
    log.crash.maximum_message_size = 64KB
    log.crash.size = 10MB
    log.crash.rotation = $D0
    log.crash.rotation.keep = 5
    nodename = VerneMQ&amp;#64;192.168.100.123
    distributed_cookie = vmqaplomb
    erlang.async_threads = 64
    erlang.max_ports = 262144
    leveldb.maximum_memory.percent = 70
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    allow_anonymous = on
    allow_register_during_netsplit = on
    allow_publish_during_netsplit = on
    allow_subscribe_during_netsplit = on
    allow_unsubscribe_during_netsplit = on
    allow_multiple_sessions = off
    retry_interval = 10
    max_client_id_size = 512
    max_inflight_messages = 1000
    max_online_messages = -1
    max_offline_messages = -1
    max_message_size = 0
    upgrade_outgoing_qos = off
    listener.max_connections = 10000
    listener.nr_of_acceptors = 10
    listener.tcp.default = 192.168.100.124:1883
    listener.vmq.clustering = 192.168.100.124:44053
    listener.http.default = 127.0.0.1:8888
    listener.mountpoint = off
    systree_enabled = on
    systree_interval = 20000
    graphite_enabled = off
    graphite_host = localhost
    graphite_port = 2003
    graphite_interval = 20000
    shared_subscription_policy = random
    plugins.vmq_passwd = on
    plugins.vmq_acl = on
    plugins.vmq_diversity = off
    plugins.vmq_webhooks = off
    plugins.vmq_bridge = off
    vmq_acl.acl_file = /etc/vernemq/vmq.acl
    vmq_acl.acl_reload_interval = 10
    vmq_passwd.password_file = /etc/vernemq/vmq.passwd
    vmq_passwd.password_reload_interval = 10
    vmq_diversity.script_dir = /usr/share/vernemq/lua
    vmq_diversity.auth_postgres.enabled = off
    vmq_diversity.auth_mysql.enabled = off
    vmq_diversity.auth_mongodb.enabled = off
    vmq_diversity.auth_redis.enabled = off
    log.console = file
    log.console.level = info
    log.console.file = /var/log/vernemq/console.log
    log.error.file = /var/log/vernemq/error.log
    log.syslog = off
    log.crash = on
    log.crash.file = /var/log/vernemq/crash.log
    log.crash.maximum_message_size = 64KB
    log.crash.size = 10MB
    log.crash.rotation = $D0
    log.crash.rotation.keep = 5
    nodename = VerneMQ&amp;#64;192.168.100.124
    distributed_cookie = vmqaplomb
    erlang.async_threads = 64
    erlang.max_ports = 262144
    leveldb.maximum_memory.percent = 70
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Activate VerneMQ node&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service vernemq start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once our broker has started, you can initially check that it is running with the vernemq ping command:&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vernemq ping
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Joining a Cluster&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vmq-admin cluster join discovery-node=VerneMQ&amp;#64;127.0.0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Leaving a Cluster&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vmq-admin cluster leave node=&amp;lt;NodeThatShouldGo&amp;gt; (only the first step!)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Getting Cluster Status Information&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vmq-admin cluster show
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Notes&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Note: For a successful VerneMQ cluster setup, it is important to choose proper VerneMQ node names. In vernemq.conf change the nodename = VerneMQ&amp;#64;127.0.0.1 to something appropriate. We choose VerneMQ&amp;#64;192.168.100.124 and VerneMQ&amp;#64;192.168.100.123  Make sure that the node names are unique within the cluster. And choose distributed_cookie = vmqaplomb.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Other Configure Related Info&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_multiple_sessions = off&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Allows a client to logon multiple times using the same client id. If on shared subscribtion may not work properly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_inflight_messages = 1000&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This option defines the maximum number of QoS 1 or 2 messages that can be in the process of being transmitted simultaneously.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_online_messages = -1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The maximum number of messages to hold in the queue above those messages that are currently in flight. Defaults to 1000. Set to -1 for no limit. This option protects a client session from overload by dropping messages (of any QoS).Defaults to 1000 messages, use -1 for no limit. This parameter was named max_queued_messages in 0.10.*. Note that 0 will totally block message delivery from any queue!&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_offline_messages = -1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This option specifies the maximum number of QoS 1 and 2 messages to hold in the offline queue.Defaults to 1000 messages, use -1 for no limit, use 0 if no messages should be stored.&lt;/p&gt;
&lt;p&gt;In contrast to the session based inflight window, max_online_messages and max_offline_messages serves as a protection of queues, on the outgoing side.&lt;/p&gt;
&lt;p&gt;Need to study more about the behabior about message incoming rate and consumption rate behabior configuration. and control process.&lt;/p&gt;
&lt;p&gt;Troubleshooting&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;In case cluster creation failed&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;wiping all cluster metadata  by shutting down all the nodes and then remove the metadata (probably in /var/lib/vernemq/meta/). This will mean each node no longer has any knowledge of the cluster. Then restart each node and re-create the cluster using the vmq-admin cluster join command.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observing Log File&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;.. code-block :: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /var/log/vernemq/console.log
sudo nano /var/log/vernemq/error.log
sudo nano /var/log/vernemq/crash.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Varnemq Monitoring&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Observing Session&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vmq-admin session show&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Clear session&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Example:
&lt;code&gt;sudo vmq-admin session disconnect client-id=testf9695b6e-555b-4b3d-8da6-7164d5274103 -c&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observing the metrics&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vmq-admin metrics show&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For qos2 message sum of  &lt;code&gt;counter.mqtt_pubcomp_sent = 20000&lt;/code&gt; across the cluster should be equal to no of message published to the broker.&lt;/p&gt;
&lt;p&gt;.. image :: /Images/qos2.png&lt;/p&gt;
&lt;p&gt;Adn for qos2 subscription in our case the sum of &lt;code&gt;counter.mqtt_pubcomp_received = 10023&lt;/code&gt; and &lt;code&gt;counter.mqtt_pubcomp_received = 9977&lt;/code&gt; should be equal to all message published to broker in the specific topic which our mqtt services client shared subscribed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference Links:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;#. &lt;a href="http://emqtt.io/docs/v2/install.html#installing-on-windows"&gt;http://emqtt.io/docs/v2/install.html#installing-on-windows&lt;/a&gt;
#. &lt;a href="http://emqttd-docs.readthedocs.io/en/latest/cluster.html"&gt;http://emqttd-docs.readthedocs.io/en/latest/cluster.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#. &lt;a href="https://vernemq.com/docs/installation/"&gt;https://vernemq.com/docs/installation/&lt;/a&gt;
#. &lt;a href="https://vernemq.com/docs/clustering/"&gt;https://vernemq.com/docs/clustering/&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Emqtt Cluster Broker&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/highavailablilt</id>
		<title>High Availability Setup</title>
		<link href="http://host.com/blog/posts/highavailablilt" />
		<updated>2020-06-12T00:00:00Z</updated>
		<content>&lt;hr /&gt;
&lt;p&gt;HA proxy&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;HAProxy(High Availability Proxy) is an open source load balancer which can load balance any TCP service. It is particularly suited for HTTP load balancing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Installing HAProxy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use the apt-get command to install HAProxy.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   Apt-get update
   apt-get install haproxy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We need to enable HAProxy to be started by the init script.
&lt;code&gt;nano /etc/default/haproxy&lt;/code&gt;
Set the ENABLED option to 1
&lt;code&gt;ENABLED=1&lt;/code&gt;
To check if this change is done properly execute the init script of HAProxy without any parameters. You should see the following.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   root&amp;#64;haproxy:~# service haproxy
   Usage: /etc/init.d/haproxy {start|stop|reload|restart|status}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Configuring HAProxy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We'll move the default configuration file and create our own one.
&lt;code&gt;mv /etc/haproxy/haproxy.cfg{,.original}&lt;/code&gt;
Create and edit a new configuration file:
&lt;code&gt;nano /etc/haproxy/haproxy.cfg&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    global
        log 127.0.0.1 local0 notice
        maxconn 2000
        user haproxy
        group haproxy
    defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        retries 3
        option redispatch
        timeout connect  5000
        timeout client  10000
        timeout server  10000
    listen stats
        bind 192.168.11.92:80
        mode http
        log global
        stats enable
        stats realm Haproxy\ Statistics
        stats uri /haproxy_stats
        stats hide-version
        stats auth admin:card4me&amp;#64;321
        balance roundrobin
        option httpclose
        option forwardfor
        server svr1 192.168.11.100:80
        server svr2 192.168.11.101:80
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;Installing keepalived&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Configuring HAProxy and Keepalived&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Install HAProxy and Keepalived on both ubuntu nodes.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   apt-get install haproxy 
   apt-get install keepalived
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Load balancing in HAProxy also requires the ability to bind to an IP address that are nonlocal, meaning that it is not assigned to a device on the local system. Below configuration is added so that floating/shared IP can be assigned to one of the load balancers.&lt;/p&gt;
&lt;p&gt;Good, keepalived is now installed. Before we proceed with configuring keepalived itself, edit the following file:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo nano /etc/sysctl.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Add the below lines.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   net.ipv4.ip_nonlocal_bind=1
  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To enable the changes made in sysctl.conf you will need to run the command.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   sysctl -p
   Output: net.ipv4.ip_nonlocal_bind = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s create keepalived.conf file on each instances.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   sudo nano  /etc/keepalived/keepalived.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the below configuration on the master node&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    global_defs {
    # Keepalived process identifier
    lvs_id haproxy_DH
    }
    # Script used to check if HAProxy is running

    vrrp_script check_haproxy {
    script &amp;quot;killall -0 haproxy&amp;quot;
    interval 2
    weight 2
    }
    # Virtual interface
    # The priority specifies the order in which the assigned interface to take ove$
    vrrp_instance VI_01 {
    state MASTER
    interface enp8s0
    virtual_router_id 51
    priority 102
    # The virtual ip address shared between the two loadbalancers
    virtual_ipaddress {
    192.168.11.96/24
    }
    track_script {
    check_haproxy
    }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Add the below configuration on the slave node.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   global_defs {
    # Keepalived process identifier
    lvs_id haproxy_DH_passive
    }
    # Script used to check if HAProxy is running
    vrrp_script check_haproxy {
    script &amp;quot;killall -0 haproxy&amp;quot;
    interval 2
    weight 2
    }
    # Virtual interface
    # The priority specifies the order in which the assigned interface to take over in a failover
    vrrp_instance VI_01 {
    state SLAVE
    interface ens33
    virtual_router_id 51
    priority 100
    # The virtual ip address shared between the two loadbalancers
    virtual_ipaddress {
    192.168.11.96/24
    }
    track_script {
    check_haproxy
    }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Restart Keepalived.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   service keepalived start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now let’s configure HAProxy on both instances. You will have do the below steps on master node as well as slave node.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   sudo nano /etc/default/haproxy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;set the property ENABLED to 1.&lt;/p&gt;
&lt;p&gt;.. code-block:: shell&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;   sudo nano /etc/haproxy/haproxy.cfg
&lt;/code&gt;&lt;/pre&gt;
</content>
		<summary>&lt;p&gt;HA proxy&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/aspnetcore</id>
		<title>aspnet core notebook</title>
		<link href="http://host.com/blog/posts/aspnetcore" />
		<updated>2020-02-18T00:00:00Z</updated>
		<content>&lt;p&gt;new console app&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;    dotnet new console -o myapp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;new solution&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;run the dotnet new command to create a new solution golden.sln inside a new folder named golden&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    dotnet new sln -o golden
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now cd into golden and add library project with the following command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    dotnet new classlib -o library
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Execute the dotnet sln command to add the newly created library.csproj project to the solution&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    dotnet sln add library/library.csproj
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Helpful links&lt;/p&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tutorials/using-on-macos"&gt;https://docs.microsoft.com/en-us/dotnet/core/tutorials/using-on-macos&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new"&gt;https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-new&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
		<summary>&lt;p&gt;new console app&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/publickey-privatekey-generation</id>
		<title>Crete public key private key OpenSSL</title>
		<link href="http://host.com/blog/posts/publickey-privatekey-generation" />
		<updated>2019-12-08T00:00:00Z</updated>
		<content>&lt;h1 id="create-public-key-private-key-openssl"&gt;Create public key private key OpenSSL&lt;/h1&gt;
&lt;p&gt;Generate Private key(pkcs1) and certificate&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    openssl genrsa -out file.key 2048
    openssl req -new -x509 -key file.key -out publickey.cer -days 1825
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
    openssl req -x509 -newkey rsa:4096 -sha256 -days 3650 -nodes  -keyout example.key -out example.crt -subj /CN=example.com  -addext subjectAltName=DNS:example.com,DNS:example.net,IP:10.0.0.1

    openssl pkcs8 -topk8 -inform pem -in file.key -outform pem -nocrypt -out file.pem

    openssl genrsa -out file.key 1024

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternating Way (Create Private key and Certificate)&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    openssl genrsa -out privkey.pem 4096
    openssl req -new -x509 -key privkey.pem -out cacert.pem -days 1095 -subj /CN=example.com  -addext subjectAltName=DNS:example.com,DNS:example.net,IP:10.0.0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="convertion-between-different-formats"&gt;convertion between different formats&lt;/h1&gt;
&lt;p&gt;PKCS #1&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Defines the traditional format for RSA keys. Two structures:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    -----BEGIN RSA PRIVATE KEY-----
    RSAPrivateKey
    -----END RSA PRIVATE KEY-----
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    -----BEGIN RSA PUBLIC KEY-----
    RSAPublicKey
    -----END RSA PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Commands&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Generate RSA private key&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    openssl genrsa -out private.pem 2048
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Extract public key from RSA private key&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    openssl rsa -in private.pem -out public.pem -RSAPublicKey_out
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ASN.1 and DER encoding&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Within the RSA, PKCS#1 and SSL/TLS communities the Distinguished Encoding Rules (DER) encoding of ASN.1 is used to represent keys, certificates and such in a portable format. Although ASN.1 is not the easiest to understand representation formats and brings a lot of complexity, it does have its merits. The certificate or key information is stored in the binary DER for ASN.1 and applications providing RSA, SSL and TLS should handle DER encoding to read in the information.&lt;/p&gt;
&lt;p&gt;PEM files&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Because DER encoding results in a truly binary representation of the encoded data, a format has been devised for being able to send these in an encoding of printable characters so you can actually mail these things. The format I focus on now is the PEM format.&lt;/p&gt;
&lt;p&gt;In essence PEM files are just base64 encoded versions of the DER encoded data. In order to distinguish from the outside what kind of data is inside the DER encoded string, a header and footer are present around the data. An example of a PEM encoded file is:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    -----BEGIN PUBLIC KEY-----
    MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDMYfnvWtC8Id5bPKae5yXSxQTt
    +Zpul6AnnZWfI2TtIarvjHBFUtXRo96y7hoL4VWOPKGCsRqMFDkrbeUjRrx8iL91
    4/srnyf6sh9c8Zk04xEOpK1ypvBz+Ks4uZObtjnnitf0NBGdjMKxveTq+VE7BWUI
    yQjtQ8mbDOsiLLvh7wIDAQAB
    -----END PUBLIC KEY-----
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The first and last line indicate the DER format that should be expected inside. The data inside is a base64 encoded version of the DER encoded information.&lt;/p&gt;
&lt;p&gt;Good explanations of the difference between the two formats pkcs1 and pkcs8 &lt;a href="https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem"&gt;https://tls.mbed.org/kb/cryptography/asn1-key-structures-in-der-and-pem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Also Take A look &lt;a href="https://stackoverflow.com/questions/18039401/how-can-i-transform-between-the-two-styles-of-public-key-format-one-begin-rsa/29707204"&gt;https://stackoverflow.com/questions/18039401/how-can-i-transform-between-the-two-styles-of-public-key-format-one-begin-rsa/29707204&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Abstract_Syntax_Notation_One"&gt;Abstract Syntax Notation One&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/18039401/how-can-i-transform-between-the-two-styles-of-public-key-format-one-begin-rsa/29707204"&gt;https://stackoverflow.com/questions/18039401/how-can-i-transform-between-the-two-styles-of-public-key-format-one-begin-rsa/29707204&lt;/a&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;Generate Private key(pkcs1) and certificate&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/wyamgettingstarted</id>
		<title>Wyam Blog Getting Started(cheetsheet)</title>
		<link href="http://host.com/blog/posts/wyamgettingstarted" />
		<updated>2019-11-25T00:00:00Z</updated>
		<content>&lt;h1 id="installing"&gt;Installing&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/Wyamio/Wyam"&gt;Github link&lt;/a&gt; For Wyam Source&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wyam.io/docs/usage/obtaining"&gt;Wyam Docs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The easiest way to install Wyam is via the global tool package named Wyam.Tool. You can install it like this&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;dotnet tool install -g Wyam.Tool
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="scaffolding-blog-recipe"&gt;Scaffolding Blog Recipe&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wyam.io/recipes/blog/overview"&gt;Docs&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;wyam new -r Blog
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="building"&gt;Building&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;wyam -r Blog
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To select a theme&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;wyam -r Blog -t CleanBlog
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="appveyor-for-continuous-integration"&gt;AppVeyor for Continuous Integration&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://wyam.io/docs/deployment/appveyor"&gt;link here&lt;/a&gt;&lt;/p&gt;
&lt;h1 id="deploy-to-github-pages"&gt;Deploy To Github Pages&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://help.github.com/en/github/working-with-github-pages/creating-a-github-pages-site"&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After configuring add new .md page in /input/post and commit project will get build and publish to github pages&lt;/p&gt;
</content>
		<summary>&lt;p&gt;&lt;a href="https://github.com/Wyamio/Wyam"&gt;Github link&lt;/a&gt; For Wyam Source&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/djangocheetsh</id>
		<title>Python Getting Started Cheet Sheet</title>
		<link href="http://host.com/blog/posts/djangocheetsh" />
		<updated>2019-11-25T00:00:00Z</updated>
		<content>&lt;h1 id="python-django-gs"&gt;Python Django GS&lt;/h1&gt;
&lt;p&gt;Installing virtualenv and virtualenvwrapper&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Configure virtualenvwrapper and django (Windows)&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    pip install virtualenvwrapper-win
	mkvirtualenv test
	workon test
	pip install django
	django-admin --version
	django-admin startproject hellodj
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Install the virtualenv package&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;	python -m pip install --user virtualenv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Checking Installation&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;	python -m virtualenv --version
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Activating and Shutting down an enviroment&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;	workon test
	deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quick Start Guide(recommended)&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    mkdir hellodj   
    cd hellodj
    python -m venv env
    .\env\Scripts\activate
    mkdir src
    pip install django
	pip freeze
    cd src
    django-admin --version
    django-admin --help
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Downgrade or Install Specific python version Inside venv using conda&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;create a virtual environment, install then switch to python 3.6.5&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-python"&gt;	$ conda create -n tensorflow python=3.7
	$ conda activate tensorflow
	$ conda install python=3.6.5
	$ pip install tensorflow
    $ conda deactivate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;conda environment path &lt;code&gt;UserDirectory(C:\Users\ashraful.alam)\Anaconda3\envs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Remove conda environment&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    conda env remove --name myenv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Clear screen in shell&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    import os
    cls = lambda: os.system('cls')

    &amp;gt;&amp;gt;&amp;gt; cls()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;colored text in Python Shell&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code&gt;    from colorama import Fore
    from colorama import Style
    
    print ('This is {Fore.GREEN}color{Style.RESET_ALL}!')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Django Python Shell&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;where manage.py located cd into this location. Go to python shell with below command&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    python manage.py shell
&lt;/code&gt;&lt;/pre&gt;
</content>
		<summary>&lt;p&gt;Installing virtualenv and virtualenvwrapper&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/mysqlbasic</id>
		<title>My SQL Basic</title>
		<link href="http://host.com/blog/posts/mysqlbasic" />
		<updated>2019-10-10T00:00:00Z</updated>
		<content>&lt;h1 id="mysql-command-line-connection"&gt;Mysql command line connection&lt;/h1&gt;
&lt;p&gt;connect db&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
    mysql -h {hostip} -P {port} -u {username} -p {database}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Example&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
    mysql -h 127.0.0.1 -P 3306 -u root -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;database backup&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
    mysqldump -h 127.0.0.1 -P 3306 -u root -p billpayment&amp;gt; sqlback.sql

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If mysqldump throws: Unknown table 'COLUMN_STATISTICS' in information_schema (1109)
Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
    mysqldump --column-statistics=0 -h 127.0.0.1 -P 3306 -u root -p billpayment&amp;gt; sqlback.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Create User and Grant Permission for remote connection&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    select host, user from mysql.user;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;    mysql&amp;gt; CREATE USER 'dev'&amp;#64;'%' IDENTIFIED BY 'secret';
    Query OK, 0 rows affected (0.00 sec)
    mysql&amp;gt; GRANT ALL PRIVILEGES ON * . * TO 'dev'&amp;#64;'%';
    Query OK, 0 rows affected (0.00 sec)
    mysql&amp;gt; quit
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="restore-database"&gt;Restore Database&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;    mysql -u [user] -p [database_name] &amp;lt; [filename].sql
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="php-my-admin-connecting-to-mysql-server-config"&gt;PHP My Admin Connecting to MySQL Server Config&lt;/h1&gt;
&lt;p&gt;Change the following paramert as appropriate  &lt;code&gt;C:\wamp64\apps\phpmyadmin4.8.4\config.inc.php&lt;/code&gt; and&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-php"&gt;    $cfg['Servers'][$i]['verbose'] = 'MySQL';
	$cfg['Servers'][$i]['host'] = '127.0.0.1';
	$cfg['Servers'][$i]['port'] =3306;//$wampConf['mysqlPortUsed'];// 3307;//$wampConf['mysqlPortUsed'];
	$cfg['Servers'][$i]['extension'] = 'mysqli';
	$cfg['Servers'][$i]['auth_type'] = 'cookie';
	$cfg['Servers'][$i]['user'] = '';
	$cfg['Servers'][$i]['password'] = '';
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="wampserver-mysql-port-changes"&gt;WampServer MYSQL port changes&lt;/h1&gt;
&lt;p&gt;Finding the configuration file&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-xml"&gt;C:\wamp64\bin\mysql\mysql5.7.24\my.ini
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;change&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# The MySQL server
[wampmysqld]
port = 3306
#
#
[mysqld]
port=3306
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Change both instances to another port (i.e. 3307) and restart Wamp MYSQL&lt;/p&gt;
</content>
		<summary>&lt;p&gt;connect db&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/sqlServerhelper</id>
		<title>Sql Server Important Query</title>
		<link href="http://host.com/blog/posts/sqlServerhelper" />
		<updated>2019-07-20T00:00:00Z</updated>
		<content>&lt;h1 id="get-all-table-row-count"&gt;Get All Table Row Count&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;method1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;CREATE TABLE #counts
(
    table_name varchar(255),
    row_count int
)

EXEC sp_MSForEachTable &amp;#64;command1='INSERT #counts (table_name, row_count) SELECT ''?'', COUNT(*) FROM ?'
SELECT table_name, row_count FROM #counts ORDER BY table_name, row_count DESC
DROP TABLE #counts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;method2:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;SELECT o.NAME,
  i.rowcnt 
FROM sysindexes AS i
  INNER JOIN sysobjects AS o ON i.id = o.id 
WHERE i.indid &amp;lt; 2  AND OBJECTPROPERTY(o.id, 'IsMSShipped') = 0
ORDER BY o.NAME
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;method3:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;-- Shows all user tables and row counts for the current database 
-- Remove is_ms_shipped = 0 check to include system objects 
-- i.index_id &amp;lt; 2 indicates clustered index (1) or hash table (0) 
SELECT o.name,
  ddps.row_count 
FROM sys.indexes AS i
  INNER JOIN sys.objects AS o ON i.OBJECT_ID = o.OBJECT_ID
  INNER JOIN sys.dm_db_partition_stats AS ddps ON i.OBJECT_ID = ddps.OBJECT_ID
  AND i.index_id = ddps.index_id 
WHERE i.index_id &amp;lt; 2  AND o.is_ms_shipped = 0 ORDER BY o.NAME 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Describe Table&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;exec sp_help 'table_name';
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;select *
from INFORMATION_SCHEMA.COLUMNS
where TABLE_NAME='Mct_GL'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Force Database Delete(Database Is in Use)&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;Use master;
ALTER database DatabaseName set offline with ROLLBACK IMMEDIATE;
DROP database DatabaseName;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Get table constraints&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;Select C.*, (Select definition From sys.default_constraints Where object_id = C.object_id) As dk_definition,
(Select definition From sys.check_constraints Where object_id = C.object_id) As ck_definition,
(Select name From sys.objects Where object_id = D.referenced_object_id) As fk_table,
(Select name From sys.columns Where column_id = D.parent_column_id And object_id = D.parent_object_id) As fk_col
From sys.objects As C
Left Join (Select * From sys.foreign_key_columns) As D On D.constraint_object_id = C.object_id 
Where C.parent_object_id = (Select object_id From sys.objects Where type = 'U'
And name = 'Table Name Here');
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="database-size-estimation"&gt;Database Size estimation&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;  SELECT 
    t.NAME AS TableName,
    s.Name AS SchemaName,
    p.rows,
    SUM(a.total_pages) * 8 AS TotalSpaceKB, 
    CAST(ROUND(((SUM(a.total_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS TotalSpaceMB,
    SUM(a.used_pages) * 8 AS UsedSpaceKB, 
    CAST(ROUND(((SUM(a.used_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS UsedSpaceMB, 
    (SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS UnusedSpaceKB,
    CAST(ROUND(((SUM(a.total_pages) - SUM(a.used_pages)) * 8) / 1024.00, 2) AS NUMERIC(36, 2)) AS UnusedSpaceMB
FROM 
    sys.tables t
INNER JOIN      
    sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN 
    sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
INNER JOIN 
    sys.allocation_units a ON p.partition_id = a.container_id
LEFT OUTER JOIN 
    sys.schemas s ON t.schema_id = s.schema_id
WHERE 
    t.NAME NOT LIKE 'dt%' 
    AND t.is_ms_shipped = 0
    AND i.OBJECT_ID &amp;gt; 255 
GROUP BY 
    t.Name, s.Name, p.Rows
ORDER BY 
    TotalSpaceMB DESC, t.Name
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="sqlcmd-utility"&gt;sqlcmd Utility&lt;/h1&gt;
&lt;p&gt;Download and Install appropriate version of sqlcmd.Check the following atricle about sqlcmd utility and latest vesion of download link&lt;/p&gt;
&lt;p&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility?view=sql-server-ver15"&gt;https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility?view=sql-server-ver15&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Connecting and Running Script using sqlcmd&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;sqlcmd -S.\SQLEXPRESS14 -i e:\ASH\test\posinventoryfullscript.sql -o e:\ASH\test\posoutput.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="sql-server-localdb-cheet-sheet"&gt;SQL Server localdb Cheet sheet&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;    SqlLocalDb info
    SQLLocalDB info v11.0
    SQLLocalDB share v11.0 Mare
    SQLLocalDB info v11.0
    SqlLocalDB create NewInstance
    SqlLocalDB info NewInstance
    SqlLocalDB create Test 11.0
    SqlLocalDB info Test
    SQLLocalDB create “Test instance” 
    SqlLocalDB start Test
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;SQL ServerManagement Studio Connect:
ServerName:(LocalDB)\ followed by the name of the LocalDB instance (v11.0)
Example:(LocalDB)\Test
Example:(LocalDB)\v11.0
And Windows Authentication&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    SqlLocalDB stop MSSQLLocaDB
    cd C:\Program Files\Microsoft SQL Server\110\Tools\Binn\
    sqlcmd -S (localDB)\v11.0
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;    CREATE DATABASE TestSQlCMD;
    GO
    USE TestSQlCMD;
    GO
    CREATE TABLE dbo.Pesron(
    ID INT,
    Name VARCHAR(50)
    );
    GO
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="generate-class-from-database-table"&gt;Generate class from database table&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-sql"&gt;declare &amp;#64;TableName sysname = 'Division'
declare &amp;#64;Result varchar(max) = 'public class ' + &amp;#64;TableName + '
{'

select &amp;#64;Result = &amp;#64;Result + '
    public ' + ColumnType + NullableSign + ' ' + ColumnName + ' { get; set; }
'
from
(
    select 
        replace(col.name, ' ', '_') ColumnName,
        column_id ColumnId,
        case typ.name 
            when 'bigint' then 'long'
            when 'binary' then 'byte[]'
            when 'bit' then 'bool'
            when 'char' then 'string'
            when 'date' then 'DateTime'
            when 'datetime' then 'DateTime'
            when 'datetime2' then 'DateTime'
            when 'datetimeoffset' then 'DateTimeOffset'
            when 'decimal' then 'decimal'
            when 'float' then 'double'
            when 'image' then 'byte[]'
            when 'int' then 'int'
            when 'money' then 'decimal'
            when 'nchar' then 'string'
            when 'ntext' then 'string'
            when 'numeric' then 'decimal'
            when 'nvarchar' then 'string'
            when 'real' then 'float'
            when 'smalldatetime' then 'DateTime'
            when 'smallint' then 'short'
            when 'smallmoney' then 'decimal'
            when 'text' then 'string'
            when 'time' then 'TimeSpan'
            when 'timestamp' then 'long'
            when 'tinyint' then 'byte'
            when 'uniqueidentifier' then 'Guid'
            when 'varbinary' then 'byte[]'
            when 'varchar' then 'string'
            else 'UNKNOWN_' + typ.name
        end ColumnType,
        case 
            when col.is_nullable = 1 and typ.name in ('bigint', 'bit', 'date', 'datetime', 'datetime2', 'datetimeoffset', 'decimal', 'float', 'int', 'money', 'numeric', 'real', 'smalldatetime', 'smallint', 'smallmoney', 'time', 'tinyint', 'uniqueidentifier') 
            then '?' 
            else '' 
        end NullableSign
    from sys.columns col
        join sys.types typ on
            col.system_type_id = typ.system_type_id AND col.user_type_id = typ.user_type_id
    where object_id = object_id(&amp;#64;TableName)
) t
order by ColumnId

set &amp;#64;Result = &amp;#64;Result  + '
}'

print &amp;#64;Result
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="links"&gt;Links&lt;/h1&gt;
&lt;p&gt;(&lt;a href="https://www.sqlshack.com/how-to-connect-and-use-microsoft-sql-server-express-localdb/"&gt;https://www.sqlshack.com/how-to-connect-and-use-microsoft-sql-server-express-localdb/&lt;/a&gt;)[https://www.sqlshack.com/how-to-connect-and-use-microsoft-sql-server-express-localdb/]&lt;/p&gt;
</content>
		<summary>&lt;p&gt;&lt;strong&gt;method1:&lt;/strong&gt;&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/jsonpatch</id>
		<title>Asp.net Core Web API Partial Updates with HTTP Patch (JSON Patch)</title>
		<link href="http://host.com/blog/posts/jsonpatch" />
		<updated>2019-06-16T00:00:00Z</updated>
		<content>&lt;h1 id="partial-updates-with-http-patch-using-json-patch-document"&gt;Partial Updates with HTTP Patch using JSON Patch document&lt;/h1&gt;
&lt;p&gt;JSON Patch is specified in &lt;a href="https://tools.ietf.org/html/rfc6902"&gt;RFC 6902&lt;/a&gt; from the IETF.&lt;/p&gt;
&lt;p&gt;We use the HTTP PATCH method to apply partial updates to a resource. This means that, if we have a resource, and we want to update only a few fields of this, and not all, this is the HTTP method we should use.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;JSON Patch is specified in &lt;a href="https://tools.ietf.org/html/rfc6902"&gt;RFC 6902&lt;/a&gt; from the IETF.&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/modelvalidation</id>
		<title>Custom Model Validation</title>
		<link href="http://host.com/blog/posts/modelvalidation" />
		<updated>2019-06-16T00:00:00Z</updated>
		<content>&lt;h1 id="custom-model-validation"&gt;Custom Model Validation&lt;/h1&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class Result
{
	public Result(bool success, string message)
	{
		Success = success;
		Message = message;
	}

	public bool Success { get; private set; }

	public string Message { get; private set; }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;private Result CheckModel(string test,string test2)
{
	var errors = new List&amp;lt;string&amp;gt;();
	
	if (!test.Equals(&amp;quot;TEST&amp;quot;))
	{
		errors.Add(&amp;quot;Input sting must be TEST&amp;quot;);
	}

	string test2 = sheet.Cell(1, 2).Value.ToString().Trim();
	if (!test2.Equals(&amp;quot;MORE TEST&amp;quot;))
	{
		errors.Add(&amp;quot;Input sting must be MORE TEST&amp;quot;);
	}

	
	var success = !errors.Any();
	var message = success ? &amp;quot;Validation successful.&amp;quot; : string.Join(&amp;quot; &amp;quot;, errors);
	return new Result(success, message);
}
&lt;/code&gt;&lt;/pre&gt;
</content>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/parameter</id>
		<title>Parameter passing in C# Passing by reference vs. passing by value</title>
		<link href="http://host.com/blog/posts/parameter" />
		<updated>2019-06-16T00:00:00Z</updated>
		<content>&lt;h1 id="parameter-passing-in-c-passing-by-reference-vs.passing-by-value"&gt;Parameter passing in C# Passing by reference vs. passing by value&lt;/h1&gt;
&lt;p&gt;there is a nice article about it by John skeet.A &lt;a href="http://www.leerichardson.com/2007/01/parameter-passing-in-c.html"&gt;complementary article&lt;/a&gt; to this one. &lt;a href="https://jonskeet.uk/csharp/parameters.html"&gt;Here&lt;/a&gt; is the John skeet article. Some parts of it is as follows&lt;/p&gt;
&lt;p&gt;Sidenote: what is the difference between passing a value object by reference and a reference object by value?
You may have noticed that the last example, passing a struct by reference, had the same effect in this code as passing a class by value. This doesn't mean that they're the same thing, however. Consider the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;void Foo (??? IntHolder x)
{
    x = new IntHolder();
}

...

IntHolder y = new IntHolder();
y.i=5;
Foo (??? y);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Consider the case where IntHolder is a struct (i.e. a value type) and the parameter is a reference parameter (i.e. replace ??? with ref above). After the call to Foo(ref y), the value of y is a new IntHolder value - i.e. y.i is 0.&lt;/p&gt;
&lt;p&gt;In the case where IntHolder is a class (i.e. a reference type) and the parameter is a value parameter (i.e. remove ??? above), the value of y isn't changed - it's a reference to the same object it was before the function member call. This difference is absolutely crucial to understanding parameter passing in C#, and is why I believe it is highly confusing to say that objects are passed by reference by default instead of the correct statement that object references are passed by value by default.&lt;/p&gt;
</content>
		<summary>&lt;p&gt;there is a nice article about it by John skeet.A &lt;a href="http://www.leerichardson.com/2007/01/parameter-passing-in-c.html"&gt;complementary article&lt;/a&gt; to this one. &lt;a href="https://jonskeet.uk/csharp/parameters.html"&gt;Here&lt;/a&gt; is the John skeet article. Some parts of it is as follows&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/httpclient</id>
		<title>HttpClient to Consume API</title>
		<link href="http://host.com/blog/posts/httpclient" />
		<updated>2019-06-13T00:00:00Z</updated>
		<content>&lt;h1 id="httpclient-to-comsume-api"&gt;HttpClient to Comsume API&lt;/h1&gt;
&lt;h1 id="httpclient"&gt;HttpClient&lt;/h1&gt;
&lt;p&gt;Provides a base class for sending HTTP requests and receiving HTTP responses&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;// HttpClient is intended to be instantiated once per application, rather than per-use. See Remarks.
static readonly HttpClient client = new HttpClient();
 
static async Task Main()
{
  // Call asynchronous network methods in a try/catch block to handle exceptions
  try	
  {
     HttpResponseMessage response = await client.GetAsync(&amp;quot;http://www.contoso.com/&amp;quot;);
     response.EnsureSuccessStatusCode();
     string responseBody = await response.Content.ReadAsStringAsync();
     // Above three lines can be replaced with new helper method below
     // string responseBody = await client.GetStringAsync(uri);

     Console.WriteLine(responseBody);
  }  
  catch(HttpRequestException e)
  {
     Console.WriteLine(&amp;quot;\nException Caught!&amp;quot;);	
     Console.WriteLine(&amp;quot;Message :{0} &amp;quot;,e.Message);
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="webrequest"&gt;WebRequest&lt;/h2&gt;
&lt;p&gt;Makes a request to a Uniform Resource Identifier (URI). This is an abstract class.&lt;/p&gt;
&lt;p&gt;Because the WebRequest class is an abstract class, the actual behavior of WebRequest instances at run time is determined by the descendant class (such as HttpWebRequest and FileWebRequest) returned by Create method.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;            WebRequest request = WebRequest.Create (&amp;quot;http://www.google.com&amp;quot;);
            HttpWebResponse response = (HttpWebResponse)request.GetResponse ();
            Stream dataStream = response.GetResponseStream ();
            // Open the stream using a StreamReader for easy access.
            StreamReader reader = new StreamReader (dataStream);
            string responseFromServer = reader.ReadToEnd ();
            Console.WriteLine (responseFromServer);
            reader.Close ();
            dataStream.Close ();
            response.Close ();
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="httpwebrequest"&gt;HttpWebRequest&lt;/h2&gt;
&lt;p&gt;Provides an HTTP-specific implementation of the WebRequest class.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;    HttpWebRequest myReq =
    (HttpWebRequest)WebRequest.Create(&amp;quot;http://www.contoso.com/&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;for new development HttpClient class is recommended&lt;/em&gt;&lt;/p&gt;
&lt;h2 id="httpmessagehandler"&gt;HttpMessageHandler&lt;/h2&gt;
&lt;p&gt;A base type for HTTP message handlers.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public abstract class HttpMessageHandler : IDisposable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are various HTTP message handles that can be used. These include the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;DelegatingHandler - A class used to plug a handler into a handler chain.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HttpMessageHandler - A simple class to derive from that supports the most common requirements for most applications.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HttpClientHandler - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;WebRequestHandler - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the System.Net.HttpWebRequest object.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="httpclienthandler"&gt;HttpClientHandler&lt;/h2&gt;
&lt;p&gt;The default message handler used by HttpClient in .NET Framework and .NET Core 2.0 and earlier.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class HttpClientHandler : System.Net.Http.HttpMessageHandler
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;static async Task Main()
{
   // Create an HttpClientHandler object and set to use default credentials
   HttpClientHandler handler = new HttpClientHandler();
   handler.UseDefaultCredentials = true;

   // Create an HttpClient object
   HttpClient client = new HttpClient(handler);

   // Call asynchronous network methods in a try/catch block to handle exceptions
   try	
   {
      HttpResponseMessage response = await client.GetAsync(&amp;quot;http://www.contoso.com/&amp;quot;);

      response.EnsureSuccessStatusCode();

      string responseBody = await response.Content.ReadAsStringAsync();
      Console.WriteLine(responseBody);
   }  
   catch(HttpRequestException e)
   {
       Console.WriteLine(&amp;quot;\nException Caught!&amp;quot;);	
       Console.WriteLine(&amp;quot;Message :{0} &amp;quot;,e.Message);
   }

   // Need to call dispose on the HttpClient and HttpClientHandler objects 
   // when done using them, so the app doesn't leak resources
   handler.Dispose(true);
   client.Dispose(true);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;HttpClientHandler in .NET Core&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Starting with .NET Core 2.1, the System.Net.Http.SocketsHttpHandler class instead of HttpClientHandler provides the implementation used by higher-level HTTP networking APIs.&lt;/p&gt;
&lt;h2 id="webrequesthandler"&gt;WebRequestHandler&lt;/h2&gt;
&lt;p&gt;Provides desktop-specific features not available to Windows Store apps or other environments.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;public class WebRequestHandler : System.Net.Http.HttpClientHandler
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="delegating-handler"&gt;Delegating handler&lt;/h2&gt;
&lt;p&gt;A message handler is a class that receives an HTTP request and returns an HTTP response. Message handlers derive from the abstract HttpMessageHandler class.&lt;/p&gt;
&lt;p&gt;Typically, a series of message handlers are chained together. The first handler receives an HTTP request, does some processing, and gives the request to the next handler. At some point, the response is created and goes back up the chain. This pattern is called a delegating handler.&lt;/p&gt;
&lt;p&gt;&lt;img src="images/image1.png" class="img-fluid" alt="delegating handler" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Server-Side Message Handlers in Web API&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On the server side, the Web API pipeline uses some built-in message handlers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HttpServer gets the request from the host.&lt;/li&gt;
&lt;li&gt;HttpRoutingDispatcher dispatches the request based on the route.&lt;/li&gt;
&lt;li&gt;HttpControllerDispatcher sends the request to a Web API controller.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="images/image2.png" class="img-fluid" alt="delegating handler" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Client-Side Message Handlers&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On the client side, the HttpClient class uses a message handler to process requests. The default handler is HttpClientHandler, which sends the request over the network and gets the response from the server. You can insert custom message handlers into the client pipeline:&lt;/p&gt;
&lt;p&gt;&lt;img src="images/image3.png" class="img-fluid" alt="delegating handler" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Custom Message Handlers&lt;/strong&gt;
To write a custom message handler, derive from System.Net.Http.DelegatingHandler and override the SendAsync method. Here is the method signature:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-csharp"&gt;Task&amp;lt;HttpResponseMessage&amp;gt; SendAsync(
    HttpRequestMessage request, CancellationToken cancellationToken);
&lt;/code&gt;&lt;/pre&gt;
</content>
		<summary>&lt;p&gt;Provides a base class for sending HTTP requests and receiving HTTP responses&lt;/p&gt;</summary>
	</entry>
	<entry>
		<id>http://host.com/blog/posts/ubuntu-basics</id>
		<title>Ubuntu basics</title>
		<link href="http://host.com/blog/posts/ubuntu-basics" />
		<updated>2019-06-11T00:00:00Z</updated>
		<content>&lt;h1 id="ubuntu-basics"&gt;Ubuntu Basics&lt;/h1&gt;
&lt;p&gt;How To Create a Sudo User on Ubuntu&lt;/p&gt;
&lt;p&gt;Check Ubuntu Version&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        lsb_release -a
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
       adduser username
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Set and confirm the new user's password at the prompt. A strong password is highly recommended!&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        Set password prompts:
        Enter new UNIX password:
        Retype new UNIX password:
        passwd: password updated successfully
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Follow the prompts to set the new user's information. It is fine to accept the defaults to leave all of this information blank.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        User information prompts:
        Changing the user information for username
        Enter the new value, or press ENTER for the default
            Full Name []:
            Room Number []:
            Work Phone []:
            Home Phone []:
            Other []:
        Is the information correct? [Y/n]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Use the usermod command to add the user to the sudo group.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        usermod -aG sudo username
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;By default, on Ubuntu, members of the sudo group have sudo privileges.
Use the su command to switch to the new user account.&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        su - username
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        sudo ls -la /root
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;
&lt;p&gt;Set static IP Ubuntu 16.04&lt;/p&gt;
&lt;hr /&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        sudo nano /etc/network/interfaces

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and paste this under &lt;code&gt;# The primary network interface:&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        auto enp0s25
        iface enp0s25 inet static
        address 192.168.0.16
        netmask 255.255.255.0
        gateway 192.168.0.1
        dns-nameservers 8.8.4.4 8.8.8.8
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        sudo /etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="language-shell"&gt;
        # The loopback network interface  
        auto lo  
        iface lo inet loopback  


        # The primary network interface  
        auto enp8s0 
        iface enp8s0 inet static  
        address 192.168.11.95
        netmask 255.255.255.0
        gateway 192.168.11.1
        dns-nameservers 8.8.8.8 8.8.4.4 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;sudo ifdown enp8s0 &amp;amp;&amp;amp; sudo ifup enp8s0&lt;/code&gt;&lt;/p&gt;
</content>
		<summary>&lt;p&gt;How To Create a Sudo User on Ubuntu&lt;/p&gt;</summary>
	</entry>
</feed>